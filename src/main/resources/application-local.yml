spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    #quokka_travel
    url: jdbc:mysql://localhost:3306/${DB_NAME}
    # root
    username: ${DB_USERNAME}
    # 1q2w3e4r5t
    password: ${DB_PASSWORD}

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME} # 이메일을 전송할 주체의 이메일 주소 (host mail)
    password: ${APP_PASSWORD} # 해당 계정으로 발급받은 App password
    properties:
      mail.smtp.auth: true
      mail.smtp.starttls.enable: true


  data:
    redis:
      host: localhost
      port: 6379

  elasticsearch:
    uris: localhost:9200

  rabbitmq:
    host: localhost           # RabbitMQ host ip
    port: 5672                # RabbitMQ port
    username: guest # RabbitMQ 웹 관리 콘솔 아이디
    password: guest # RabbitMQ 웹 관리 콘솔 비밀번호

  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${KAKAO_CLIENT_ID} # 클라이언트 웹 어플리케이션 식별자 (노출O)
            client-secret: ${KAKAO_CLIENT_SECRET} # 클라이언트 id 에 대한 비밀키 (절대 노출x)
            redirect-uri: http://localhost:8080/users/login/kakao
            client-authentication-method: client_secret_post
            # kakao는 인증 토큰 발급 요청 메서드가 post 이다.
            authorization-grant-type: authorization_code
            scope: # kakao 개인 정보 동의 항목 설정의 ID 값
              - profile_nickname
              - account_email
            client-name: kakao

        #kakao provider 설정
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
            # 유저 정보 조회 시 반환된느 최상위 필드명으로 해야 한다.





#  batch:
#    job:
#      name:
#      enabled: false
#    datasource:
#      url:
#      username:
#      password:
#      driver-class-name:

jwt:
  secret:
    key: ${JWT_SECRET_KEY}

slack:
  webhook-url: ${SLACK_WEBHOOK_URL}

cloud:
  aws:
    credentials:
      access-key: ${AWS_ACCESS_KEY}  # 로컬 환경에서는 실제 키 대신 테스트 키를 넣거나 빈 값으로 두기
      secret-key: ${AWS_SECRET_KEY}
    region:
      static: ap-northeast-2
    s3:
      bucket: ${AWS_S3_BUCKET}